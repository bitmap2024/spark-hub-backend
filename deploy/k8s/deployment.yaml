apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-hub-backend
  labels:
    app: spark-hub-backend
spec:
  replicas: 2  # 副本数，可根据负载调整
  selector:
    matchLabels:
      app: spark-hub-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: spark-hub-backend
    spec:
      containers:
      - name: spark-hub-backend
        image: ${DOCKER_REGISTRY}/spark-hub-backend:${IMAGE_TAG}  # 替换为你的镜像仓库地址
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        # 从Secret中获取敏感信息
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: spark-hub-db-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: spark-hub-db-credentials
              key: password
        - name: POSTGRES_SERVER
          valueFrom:
            configMapKeyRef:
              name: spark-hub-config
              key: db_host
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: spark-hub-config
              key: db_name
        # 启用reload配置，方便开发调试
        - name: RELOAD
          value: "true"
        # 健康检查
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
        # 挂载配置
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: config-volume
          mountPath: /app/config
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: spark-hub-logs-pvc
      - name: config-volume
        configMap:
          name: spark-hub-config 